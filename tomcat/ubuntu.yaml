---
- name: install tomcat 10 on ubuntu
  hosts: ubuntu
  become: yes
  tasks:
    - name: pop fail message when os is changed
      ansible.builtin.fail:
        msg: not using correct distribution
      when: ansible_facts ['distribution'] != 'ubuntu'
    - name: update packages and install java
      ansible.builtin.apt:
        name: "{{ java_package }}"
        update_cache: yes
        state: present
    - name: create a group tomcat
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: create a system user tomcat
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: true
        group: "{{ group_name }}"
        home: "{{ home_dir }}"
        shell: "{{ default_shell }}"
        state: present
    - name: print stats of tomcat
      ansible.builtin.stat:
        path: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
      register: store_tomcat_stats
    - name: print
      debug: 
        var: store_tomcat_stats.stat.exists
    - name: download and extract tomcat
      ansible.builtin.unarchive:
        src: "https://dlcdn.apache.org/tomcat/tomcat-10/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ home_dir }}"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        remote_src: yes
      when: store_tomcat_stats.stat.exists == false
      notify:
        - give execute permissions to shell files
    - name: create a symbolic link
      ansible.builtin.file:
        src: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ home_dir }}/latest"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: link
    - name: change ownership of the directory
      ansible.builtin.file:
        path: "{{ home_dir }}"
        state: directory
        recurse: yes
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: create a service file
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
    - name: enable and start tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        enabled: yes
        state: started
    - name: update users, manager context, manager-context.xml configuration
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - { src: "tomcat-users.xml", dest: "{{ home_dir }}/latest/conf/tomcat-users.xml" }
        - { src: "manager-context.xml", dest: "{{ home_dir }}/latest/webapps/manager/META-INF/context.xml" }
        - { src: "hostmanager-context.xml", dest: "{{ home_dir }}/latest/webapps/host-manager/META-INF/context.xml" }
      notify:
        - restart tomcat
  handlers: 
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat.service
        state: restarted
    - name: give execute permissions to shell files
      ansible.builtin.shell:
        cmd: "chmod +x /opt/tomcat/latest/bin/*.sh"
        executable: "/bin/bash"